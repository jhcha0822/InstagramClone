spring:

  # H2 Database
  h2:
    console:
      enabled: true

  datasource:
    # H2 DB 메모리 상에서 사용
    url: jdbc:h2:mem:instagramclone
    # 접속을 위한 드라이버
    driver-class-name: org.h2.Driver
    # SpringBoot 2.4부터 username 필수
    username: sa
    password:

  # OAuth2
  security:
    oauth2:
      client:
        registration:
          google:
            #github push 불가능, id, secret key 제거 후 커밋
            #추후에 github에서 따로 설정 필요
            client-name: google
            client-id: 512715815216-f6adgjebvgdh15vjsmth5o1ub1jnfi5t.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
  # JWT
  jwt:
    header: Authorization
    #HS512
    #echo 'instagram-clone-project-spring-boot-jwt-secret-instagram-clone-project-spring-boot-jwt-secret'|base64
    secret: aW5zdGFncmFtLWNsb25lLXByb2plY3Qtc3ByaW5nLWJvb3Qtand0LXNlY3JldC1pbnN0YWdyYW0tY2xvbmUtcHJvamVjdC1zcHJpbmctYm9vdC1qd3Qtc2VjcmV0
    token-validity-in-seconds: 86400

  mail:
    host: smtp.gmail.com
    port: 587
    username: ckwdktek12@gmail.com
    password: flgk jakq ysgj xxuj
    properties:
      mail:
        smtp:
          auth: true
          ssl.enable: false
          starttls.enable: true
          trust: smtp.gmail.com
        transport:
          protocol: smtp
        debug: true

  # JPA
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    # create: 객체를 통해 자동 테이블 생성
    # drop: 종료 시 테이블 삭제
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    # 초기화 지연 false 설정
    defer-datasource-initialization: true

  # 콘솔 확인
  output:
    ansi:
      enabled: always

  data:
    mongodb:
      host: localhost
      port: 27017
      database: post
    # Redis
    redis:
      host: localhost
      port: 6379
      timeout: 6000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  aws:
    s3:
      bucket: instagram-clonecoding-project
    stack.auto: false
    region.static: ap-northeast-2
    credentials:
      accessKey: AKIAQSOI4T52K3HZ3FEY
      secretKey: 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

  cloud:
    stream:
      bindings:
        output:
          destination: chat-messages
      rabbit:
        bindings:
          output:
            producer:
              requiredGroups: chat-group
              # destination은 채팅과 관련된 이름으로, requiredGroups는 수신 그룹

  rabbitmq:
    host: localhost
    port: 5672 # AMQP 포트
    username: guest
    password: guest

  websocket:
    stomp:
      broker:
        relay:
          host: localhost
          port: 61613 # STOMP 포트
          username: guest
          password: guest

# log
logging:
  level:
    com.project: DEBUG
    # 파라미터 확인
    org.springframework: DEBUG
    org.hibernate.type: trace
    org.springframework.security: DEBUG
    org.springframework.data.mongodb: DEBUG

# mustache 한글 깨짐
server:
  servlet:
    encoding:
      force-response: true

#swagger
springdoc:
  swagger-ui:
    groups-order: DESC
    tags-sorter: alpha
    operations-sorter: method
    disable-swagger-default-url: true
    display-request-duration: true
    defaultModelsExpandDepth: 2
    defaultModelExpandDepth: 2
  api-docs:
    path: /api-docs
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  writer-with-default-pretty-printer: true
  model-and-view-allowed: true
  paths-to-match:
    - /api/v1/**